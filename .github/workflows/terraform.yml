
name: 'Terraform'

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:      
    inputs:
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'eu-north-1' 
permissions:
  contents: write-all

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: .
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        aws-region: ${{ inputs.aws_region }}  # Use the input parameter
        role-session-name: MySessionName
        role-skip-session-tagging: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check 
      
    - name: terraform plan
      id: plan
      uses: dflook/terraform-plan@v1
      env:
        add_github_comment: changes-only
        TF_PLAN_COLLAPSE_LENGTH: 30

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: terraform apply 
      uses: dflook/terraform-apply@v1
      with:
        auto_approve: false
